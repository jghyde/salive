<?php
/**
 * @file
 * Module file for Ridiculously Responsive Social Share Buttons.
 */

/**
 * Implements hook_menu().
 */
function rrssb_menu() {
  $items['admin/config/content/rrssb'] = array(
    'title' => 'Ridiculously Responsive Social Sharing Buttons',
    'description' => 'Configure the Ridiculously Responsive Social Sharing Buttons to select which social buttons you would like to enable.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('rrssb_form'),
    'access callback' => 'user_access',
    'access arguments' => array('administer rrssb'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function rrssb_permission() {
  return array(
    'administer rrssb' => array(
      'title' => t('Administer RRSSB'),
      'description' => t('Permission to allow user to configure the Ridiculously Responsive Social Share Buttons.'),
      'restrict access' => TRUE,
    ),
  );
}
/**
 * Implements hook_block_info().
 */
function rrssb_block_info() {
  $blocks['rrssb'] = array(
    'info' => t('Ridiculously Responsive Social Share Buttons'),
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function rrssb_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'rrssb':
      $block['subject'] = t('Share this content.');
      $block['content'] = array(
        '#markup' => rrssb_get_buttons(),
      );
  }
  return $block;
}

/**
 * Implements hook_form().
 */
function rrssb_form() {
  $form['rrssb_chosen'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Which buttons would you like to enable?'),
    '#options' => drupal_map_assoc(array(
      'email',
      'facebook',
      'tumblr',
      'linkedin',
      'twitter',
      'reddit',
      'googleplus',
      'youtube',
      'pinterest',
      'pocket',
      'github',
    )),
    '#default_value' => variable_get('rrssb_chosen'),
  );
  $form['rrssb_youtube_username'] = array(
    '#type' => 'textfield',
    '#title' => t('YouTube Username'),
    '#description' => t('Enter your YouTube username in order for the social button to link to your YouTube channel.'),
    '#default_value' => variable_get('rrssb_youtube_username'),
    '#states' => array(
      'invisible' => array(
        ':input[name="rrssb_chosen[youtube]"]' => array('checked' => FALSE),
      ),
    ),
  );
  $form['rrssb_github_username'] = array(
    '#type' => 'textfield',
    '#title' => t('Github Username'),
    '#description' => t('Enter your Github username in order for the social button to link to your Github profile.'),
    '#default_value' => variable_get('rrssb_github_username'),
    '#states' => array(
      'invisible' => array(
        ':input[name="rrssb_chosen[github]"]' => array('checked' => FALSE),
      ),
    ),
  );
  return system_settings_form($form);
}

/**
 * Implements hook_libraries_info().
 */
function rrssb_libraries_info() {
  $libraries['rrssb'] = array(
    'name' => 'Ridiculously Responsive Social Share Buttons',
    'vendor url' => 'http://kurtnoble.com/labs/rrssb/',
    'download url' => 'https://github.com/kni-labs/rrssb/archive/master.zip',
    'files' => array(
      'js' => array(
        'js/rssb.min.js',
      ),
      'css' => array(
        'css/rrssb.css',
      ),
    ),
  );

  return $libraries;
}

/**
 * Sets the current URL to be the shareable url.
 */
function rrssb_get_url() {
  // TODO: Tokenize this?
  return "http" . (isset($_SERVER['HTTPS']) ? "s" : "") . "://" . "{$_SERVER['HTTP_HOST']}{$_SERVER['REQUEST_URI']}";
}

/**
 * Gets the current Page title.
 */
function rrssb_get_title() {
  return drupal_get_title();
}
/**
 * Returns an html list of the themed links with urls.
 */
function rrssb_get_buttons() {
  $type = 'ul';
  $attributes = array(
    'class' => array('rrssb-buttons', 'clearfix'),
  );
  $my_url = check_plain(rrssb_get_url());
  $my_title = check_plain(rrssb_get_title());
  // Get the site logo as the default pinterest image.
  $logo = theme_get_setting('logo');
  if (!isset($logo)) {
    $logo = 'https://www.drupal.org/files/druplicon.large_.png';
  }
  $links = array(
    'email' => '<a href="mailto:?subject=' . urlencode($my_title) . '&amp;body='. urlencode($my_url) .'" class="popup">
                            <i class="fa fa-envelope fa-2x white"></i>
                            <span class="text">email</span>
                        </a>',
    'facebook' => '<a href="https://www.facebook.com/sharer/sharer.php?u=' . $my_url . '" class="popup">
                            <i class="fa fa-facebook fa-2x white"></i>
                            <span class="text">Facebook</span>
                        </a>',
    'linkedin' => '<a href="http://www.linkedin.com/shareArticle?mini=true&amp;url=' . $my_url .'&amp;title=' . urlencode($my_title) . '" class="popup">
                            <i class="fa fa-linkedin fa-2x white"></i>
                            <span class="text">linkedin</span>
                        </a>',
    'twitter' => '<a href="http://twitter.com/home?status=' . urlencode($my_title) . '%20' .  $my_url . '" class="popup">
                            <i class="fa fa-twitter fa-2x white"></i>
                            <span class="text">twitter</span>
                        </a>',
    'googleplus' => '<a href="https://plus.google.com/share?url=' . urlencode($my_title) . '%20' . $my_url . '" class="popup">
                            <i class="fa fa-google-plus fa-2x white"></i>
                            <span class="text">google+</span>
                        </a>',
    'pinterest' => '<a href="http://pinterest.com/pin/create/button/?url=' . $my_url . '&amp;media=' . $logo .'&amp;description=' . urlencode($my_title) . '" class="popup">
                            <i class="fa fa-pinterest fa-2x white"></i>
                            <span class="text">pinterest</span>
                        </a>',
    'tumblr' => '<a href="http://tumblr.com/share?s=&amp;v=3&t='. urlencode($my_title) . '&amp;u=' . urlencode($my_url) . '">
                            <i class="fa fa-tumblr fa-2x white"></i>
                            <span class="text">tumblr</span>
                        </a>',
    'reddit' => '<a href="http://www.reddit.com/submit?url=' . $my_url . '">
                            <i class="fa fa-reddit fa-2x white"></i>
                            <span class="text">reddit</span>
                        </a>',
    'youtube' => '<a href="https://www.youtube.com/user/' . check_plain(variable_get('rrssb_youtube_username', '')) . '">
                            <i class="fa fa-youtube fa-2x white"></i>
                            <span class="text">youtube</span>
                        </a>',
    'pocket' => '<a href="https://getpocket.com/save?url=' . $my_url . '">
                            <i class="fa fa-pocket fa-2x white"></i>
                            <span class="text">pocket</span>
                        </a>
                    </li>',
    'github' => '<a href="https://github.com/'. check_plain(variable_get('rrssb_github_username', '')) . '">
                            <i class="fa fa-github fa-2x white"></i>
                            <span class="text">github</span>
                        </a>',
  );
  $items = array();
  $defaults = array('email', 'facebook', 'linkedin', 'twitter', 'googleplus', 'pinterest');
  $chosen = variable_get('rrssb_chosen', $defaults);
  foreach ($chosen as $key => $value) {
    if ($value) {
      $items[] = array(
        'data' => $links[$value],
        'class' => array($key),
      );
    }
    else {
      continue;
    }
  }
  // Add css and js here, so it's always available when we're showing buttons.
  // Don't have to worry about adding them more than once.
  drupal_add_css(libraries_get_path('rrssb') . '/css/rrssb.css');
  drupal_add_css(drupal_get_path('module','rrssb') . '/css/rrssb-overrides.css');
  drupal_add_js(libraries_get_path('rrssb') . '/js/rrssb.min.js', array('scope' => 'footer'));

  return theme('item_list', array('items' => $items, 'title' => '', 'type' => $type, 'attributes' => $attributes));
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function rrssb_form_node_type_form_alter(&$form, &$form_state) {
  $form['rrssb'] = array(
    '#type' => 'fieldset',
    '#title' => t('Ridiculously Responsive Social Share Buttons'),
    '#collapsible' => TRUE,
    '#group' => 'additional_settings',
    '#weight' => 20,
    '#attributes' => array(
      'class' => array('rrssb-node-type-settings-form'),
    ),
    '#access' => user_access('administer nodes'),
  );
  $form['rrssb']['show'] = array(
    '#type' => 'checkbox',
    '#title' => t('Show the social buttons?'),
    '#default_value' => variable_get('rrssb_' . $form['#node_type']->type, 1),
  );
  $form['#submit'][] = 'rrssb_node_type_callback';
}

/**
 * Custom handler to save rrssb info.
 */
function rrssb_node_type_callback($form, &$form_state) {
  variable_set('rrssb_' . $form_state['values']['type'], $form_state['complete form']['rrssb']['show']['#value']);
}

/**
 * Implements hook_node_prepare().
 */
function rrssb_node_prepare($node) {
  if (!isset($node->rrssb)) {
    $node->rrssb = variable_get("rrssb_{$node->type}", 0);
  }
}

/**
 * Custom handler to save rrssb info for individual nodes.
 */
function rrssb_node_callback($form, &$form_state) {

}
/**
 * Implements hook_node_view().
 */
function rrssb_node_view($node, $view_mode, $langcode) {
  if (variable_get('rrssb_' . $node->type) == 1) {
    $node->content['rrssb'] = array(
      '#type' => 'item',
      '#markup' => rrssb_get_buttons(),
    );
  }
}

/**
 * Implements hook_field_extra_fields().
 */
function rrssb_field_extra_fields() {
  $extra['node']['article']['display'] = array(
    'rrssb' => array(
      'label' => t('Ridiculously Responsive Social Share Buttons'),
      'description' => t('A fake field to display Social buttons'),
      'weight' => 10,
    ),
  );

  return $extra;
}