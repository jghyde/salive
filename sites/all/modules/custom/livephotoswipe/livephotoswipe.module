<?php

/**
 * @file livephotoswipe.module
 * TODO: Enter file description here.
 */
function livephotoswipe_theme() {
  return array(
    'livephotoswipe_imagefield' => array(
      'variables' => array(
        'image' => array(),
        'path' => NULL,
        'title' => NULL,
        'gid' => NULL,
      ),
      'file' => 'livephotoswipe.theme.inc',
    ),
    'livephotoswipe_image_formatter' => array(
      'variables' => array(
        'item' => NULL,
        'node' => NULL,
        'field' => array(),
        'display_settings' => array(),
      ),
      'file' => 'livephotoswipe.theme.inc',
    ),
  );
}  

function livephotoswipe_init() {
  $settings = variable_get('livephotoswipe_settings', livephotoswipe_get_default_settings());
    drupal_add_js(array(
      'photoswipe' => array(
        'options' => $settings,
      ),
    ),
  array('type' => 'setting', 'scope' => JS_DEFAULT));
}

/**
 * Implements hook_field_formatter_info().
 */
function livephotoswipe_field_formatter_info() {
  return array(
    'photoswipe' => array(
      'label' => t('Photoswipe'),
      'field types' => array('image'),
      'settings' => array(
        'livephotoswipe_node_style' => '',
        'livephotoswipe_image_style' => '',
      ),
    ),
  );
}

/**
 * Implements hook_field_formatter_settings_form().
 */
function livephotoswipe_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];

  $image_styles = image_style_options(FALSE);
  $image_styles_hide = $image_styles;
  $image_styles_hide['hide'] = t('Hide (do not display image)');
  $element['livephotoswipe_node_style'] = array(
    '#title' => t('Node image style'),
    '#type' => 'select',
    '#default_value' => $settings['photoswipe_node_style'],
    '#empty_option' => t('None (original image)'),
    '#options' => $image_styles_hide,
    '#description' => t('Image style to use in the node.'),
  );
  $element['livephotoswipe_image_style'] = array(
    '#title' => t('Photoswipe image style'),
    '#type' => 'select',
    '#default_value' => $settings['photoswipe_image_style'],
    '#empty_option' => t('None (original image)'),
    '#options' => $image_styles,
    '#description' => t('Image style to use in the Photoswipe.'),
  );

  return $element;
}

/**
 * Implements hook_field_formatter_settings_summary().
 */
function livephotoswipe_field_formatter_settings_summary($field, $instance, $view_mode) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];

  $summary = array();

  $image_styles = image_style_options(FALSE);
  // Unset possible 'No defined styles' option.
  unset($image_styles['']);
  // Styles could be lost because of enabled/disabled modules that defines
  // their styles in code.
  if (isset($image_styles[$settings['livephotoswipe_node_style']])) {
    $summary[] = t('Node image style: @style', array('@style' => $image_styles[$settings['livephotoswipe_node_style']]));
  }
  else if ($settings['livephotoswipe_node_style'] == 'hide') {
    $summary[] = t('Node image style: Hide');
  }
  else {
    $summary[] = t('Node image style: Original image');
  }

  if (isset($image_styles[$settings['livephotoswipe_image_style']])) {
    $summary[] = t('Photoswipe image style: @style', array('@style' => $image_styles[$settings['livephotoswipe_image_style']]));
  }
  else {
    $summary[] = t('photoswipe image style: Original image');
  }

  return implode('<br />', $summary);
}

/**
 * Implements hook_field_formatter_view().
 */
function livephotoswipe_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  // Add JS and CSS
  drupal_add_js(libraries_get_path('PhotoSwipe') . '/dist/photoswipe.min.js');
  drupal_add_js(libraries_get_path('PhotoSwipe') . '/dist/photoswipe-ui-default.min.js');
  drupal_add_css(libraries_get_path('PhotoSwipe') . '/dist/photoswipe.css');
  drupal_add_css(libraries_get_path('PhotoSwipe') . '/dist/default-skin/default-skin.css');
  
  $element = array();

  if (!empty($items)) {
    $element = array(
      '#type' => 'container',
      '#attributes' => array('class' => array('photoswipe')),
    );
  }

  foreach ($items as $delta => $item) {
    $element[$delta] = array(
      '#theme' => 'livephotoswipe_image_formatter',
      '#item' => $item,
      '#node' => $entity,
      '#field' => $field,
      '#display_settings' => $display['settings'],
    );
  }

  return $element;
}

/**
 * Get photoswipe default settings.
 */
function livephotoswipe_get_default_settings() {
  return array(
    'allowUserZoom' => FALSE,
    'autoStartSlideshow' => FALSE,
    'allowRotationOnUserZoom' => FALSE,
    'backButtonHideEnabled' => TRUE,
    'captionAndToolbarAutoHideDelay' => 5000,
    'captionAndToolbarFlipPosition' => FALSE,
    'captionAndToolbarHide' => FALSE,
    'captionAndToolbarOpacity' => 0.8,
    'captionAndToolbarShowEmptyCaptions' => TRUE,
    'cacheMode' => 'normal',
    'doubleTapSpeed' => 300,
    'doubleTapZoomLevel' => '2.5',
    'enableDrag' => TRUE ,
    'enableKeyboard' => TRUE,
    'enableMouseWheel' => TRUE ,
    'fadeInSpeed' => 250,
    'fadeOutSpeed' => 250,
    'imageScaleMethod' => 'fit',
    'invertMouseWheel' => FALSE,
    'jQueryMobile' => variable_get('photoswipe_jquery_mobile'),
    'jQueryMobileDialogHash' => '&ui-state=dialog',
    'loop' => TRUE,
    'margin' => 20,
    'maxUserZoom' => '5.0',
    'minUserZoom' => '0.5',
    'mouseWheelSpeed' => 500,
    'nextPreviousSlideSpeed' => 0,
    'preventHide' => FALSE,
    'preventSlideshow' => FALSE,
    'slideshowDelay' => 3000,
    'slideSpeed' => 250,
    'swipeThreshold' => 50,
    'swipeTimeThreshold' => 250,
    'slideTimingFunction' => 'ease-out',
    'zIndex' => 1000,
  );
}

